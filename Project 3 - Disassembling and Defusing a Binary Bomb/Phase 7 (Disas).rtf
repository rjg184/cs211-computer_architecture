{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Test Input: abcdef\
\
Dump of assembler code for function phase_7:\
   0x08048f62 <+0>:	push   %ebx\
   0x08048f63 <+1>:	sub    $0x28,%esp\
   0x08048f66 <+4>:	mov    0x30(%esp),%ebx\
   0x08048f6a <+8>:	mov    %gs:0x14,%eax\
   0x08048f70 <+14>:	mov    %eax,0x1c(%esp)\
   0x08048f74 <+18>:	xor    %eax,%eax\
   0x08048f76 <+20>:	mov    %ebx,(%esp)\
   0x08048f79 <+23>:	call   0x80491fb <string_length>\
   0x08048f7e <+28>:	cmp    $0x6,%eax\
   0x08048f81 <+31>:	je     0x8048fc8 <phase_7+102>\
   0x08048f83 <+33>:	call   0x8049515 <explode_bomb>\
   0x08048f88 <+38>:	jmp    0x8048fc8 <phase_7+102>\
   0x08048f8a <+40>:	movzbl (%ebx,%eax,1),%edx\
   0x08048f8e <+44>:	and    $0xf,%edx\
   0x08048f91 <+47>:	movzbl 0x804a5c4(%edx),%edx\
   0x08048f98 <+54>:	mov    %dl,0x15(%esp,%eax,1)\
   0x08048f9c <+58>:	add    $0x1,%eax\
   0x08048f9f <+61>:	cmp    $0x6,%eax\
   0x08048fa2 <+64>:	jne    0x8048f8a <phase_7+40>\
   0x08048fa4 <+66>:	movb   $0x0,0x1b(%esp)\
   0x08048fa9 <+71>:	movl   $0x804a527,0x4(%esp)\
   0x08048fb1 <+79>:	lea    0x15(%esp),%eax\
   0x08048fb5 <+83>:	mov    %eax,(%esp)\
=> 0x08048fb8 <+86>:	call   0x804921a <strings_not_equal>\
   0x08048fbd <+91>:	test   %eax,%eax\
   0x08048fbf <+93>:	je     0x8048fd2 <phase_7+112>\
   0x08048fc1 <+95>:	call   0x8049515 <explode_bomb>\
   0x08048fc6 <+100>:	jmp    0x8048fd2 <phase_7+112>\
   0x08048fc8 <+102>:	mov    $0x0,%eax\
   0x08048fcd <+107>:	lea    0x0(%esi),%esi\
   0x08048fd0 <+110>:	jmp    0x8048f8a <phase_7+40>\
   0x08048fd2 <+112>:	mov    0x1c(%esp),%eax\
   0x08048fd6 <+116>:	xor    %gs:0x14,%eax\
   0x08048fdd <+123>:	lea    0x0(%esi),%esi\
   0x08048fe0 <+126>:	je     0x8048fe7 <phase_7+133>\
   0x08048fe2 <+128>:	call   0x8048830 <__stack_chk_fail@plt>\
   0x08048fe7 <+133>:	add    $0x28,%esp\
   0x08048fea <+136>:	pop    %ebx\
   0x08048feb <+137>:	ret    \
---Type <return> to continue, or q <return> to quit---\
End of assembler dump.\
(gdb) i r\
eax            0xffffcc55	-13227\
ecx            0x7	7\
edx            0x72	114\
ebx            0x804da00	134535680\
esp            0xffffcc40	0xffffcc40\
ebp            0xffffcc88	0xffffcc88\
esi            0x0	0\
edi            0x0	0\
eip            0x8048fb8	0x8048fb8 <phase_7+86>\
eflags         0x246	[ PF ZF IF ]\
cs             0x23	35\
ss             0x2b	43\
ds             0x2b	43\
es             0x2b	43\
fs             0x0	0\
gs             0x63	99\
(gdb) x/s -13227\
0xffffcc55:	"aduier"\
(gdb) x/6c $eax\
0xffffcc55:	97 'a'	100 'd'	117 'u'	105 'i'	101 'e'	114 'r'\
(gdb) x/6c 0x804a527\
0x804a527:	98 'b'	114 'r'	117 'u'	105 'i'	110 'n'	115 's'\
(gdb) quit\
A debugging session is active.\
\
	Inferior 1 [process 6155] will be killed.\
\
Quit anyway? (y or n) y\
[rjg184@utility bomb178]$ \
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
\
-> input: abcdef\
0xffffcc55:	97 'a'	100 'd'	117 'u'	105 'i'	101 'e'	114 'r'\
\
\'97\'97\'97\'97\'97\'97\'97\'97\
\
-> input: ghijkc\
(gdb) x/6c $eax\
0xffffcc45:	115 's'	110 'n'	102 'f'	111 'o'	116 't'	117 'u'\
\
\'97\'97\'97\'97\'97\
\
-> input: lmnopq\
0xffffcc45:	118 'v'	98 'b'	121 'y'	108 'l'	109 'm'	97 'a'\
\
\'97\'97\'97\'97\'97\'97\
\
-> input: rstuvw\
0xffffcc45:	100 'd'	117 'u'	105 'i'	101 'e'	114 'r'	115 's'\
\
\'97\'97\'97\
\
-> input: xyzaqg\
0xffffcc45:	110 'n'	102 'f'	111 'o'	97 'a'	97 'a'	115 's'\
\
\'97\'97\'97\
\
a = a\
b = d\
c = u\
d = i\
e = e\
f = r\
g = s\
h = n\
i = f\
j = o\
k = t\
l = v\
m = b\
n = y\
o = l\
p = m\
q = a\
r = d\
s = u\
t = i\
u = e\
v = r\
w = s\
x = n\
y = f\
z = o\
\
before: m f s t x w\
after: b r u i n s\
}